SEMANTIC_GRAPH = {
    "nodes": [
        # Main central node
        {
            "id": 0,
            "term": "Анализ функционала и производительности статического анализа",
            "category": "Основное",
            "definition": "Исследование подходов к оценке эффективности и функциональных возможностей систем статического анализа кода в контексте веб-приложений",
            "position": {"x": 200, "y": -30},
        },
        # Programming Languages and Features
        {
            "id": 1,
            "term": "Python",
            "category": "Язык",
            "definition": "Высокоуровневый язык программирования, известный своей простотой и широким набором библиотек для различных задач, включая веб-разработку и анализ данных.",
            "position": {"x": -320, "y": 325},
        },
        {
            "id": 2,
            "term": "Динамическая типизация",
            "category": "Особенность языка",
            "definition": "Свойство языков программирования, позволяющее переменным менять тип данных во время выполнения программы.",
            "position": {"x": -30, "y": 530},
        },
        {
            "id": 3,
            "term": "Статическая типизация",
            "category": "Особенность языка",
            "definition": "Свойство языков программирования, при котором типы переменных определяются на этапе компиляции, что позволяет обнаруживать ошибки до выполнения программы.",
            "position": {"x": -135, "y": 780},
        },
        {
            "id": 4,
            "term": "ООП",
            "category": "Парадигма программирования",
            "definition": "Парадигма программирования, основанная на использовании объектов, которые содержат как данные, так и методы для их обработки.",
            "position": {"x": -1030, "y": 630},
        },
        {
            "id": 5,
            "term": "Датаклассы",
            "category": "Особенность языка",
            "definition": "Специальный синтаксис в Python для создания классов, предназначенных для хранения данных, с минимальным количеством кода.",
            "position": {"x": -700, "y": 710},
        },
        {
            "id": 6,
            "term": "PEP 8",
            "category": "Стандарт",
            "definition": "Документ, содержащий рекомендации по стилю кода на языке Python, направленный на улучшение читаемости и согласованности кода.",
            "position": {"x": -305, "y": 630},
        },
        # Development Tools and Concepts
        {
            "id": 7,
            "term": "Фреймворк",
            "category": "Инструмент разработки",
            "definition": "Набор инструментов и библиотек, предоставляющий структуру для разработки приложений, упрощая процесс создания и поддержки кода.",
            "position": {"x": 1140, "y": 425},
        },
        {
            "id": 8,
            "term": "Flask",
            "category": "Фреймворк",
            "definition": "Легковесный веб-фреймворк на языке Python, предназначенный для создания веб-приложений и RESTful API.",
            "position": {"x": 1545, "y": 35},
        },
        {
            "id": 9,
            "term": "CLI",
            "category": "Интерфейс",
            "definition": "Командный интерфейс, способ взаимодействия с компьютером через текстовые команды.",
            "position": {"x": 990, "y": -615},
        },
        {
            "id": 10,
            "term": "Статический анализ",
            "category": "Инструмент разработки",
            "definition": "Метод анализа программного кода без его выполнения, используемый для обнаружения ошибок и уязвимостей.",
            "position": {"x": -325, "y": 1180},
        },
        {
            "id": 11,
            "term": "Системы статического анализа",
            "category": "Инструмент разработки",
            "definition": "Инструменты, которые автоматически анализируют код на наличие ошибок, уязвимостей и несоответствий стандартам.",
            "position": {"x": -565, "y": 870},
        },
        # API and Web Development
        {
            "id": 12,
            "term": "API",
            "category": "Интерфейс",
            "definition": "Интерфейс программирования приложений, набор правил и протоколов для взаимодействия между различными программными компонентами.",
            "position": {"x": 980, "y": 1395},
        },
        {
            "id": 13,
            "term": "RESTful API",
            "category": "Архитектура",
            "definition": "Архитектурный стиль для разработки веб-сервисов, который использует стандартные HTTP методы для взаимодействия с ресурсами.",
            "position": {"x": 1540, "y": 675},
        },
        {
            "id": 14,
            "term": "Внешний API",
            "category": "Интерфейс",
            "definition": "Интерфейс, предоставляемый сторонним сервисом, который позволяет другим приложениям взаимодействовать с его функционалом или данными.",
            "position": {"x": 1040, "y": 960},
        },
        {
            "id": 15,
            "term": "API Погоды",
            "category": "Сервис",
            "definition": "Интерфейс программирования приложений, предоставляющий доступ к данным о погоде, которые могут быть использованы в приложениях для получения актуальной информации.",
            "position": {"x": 1035, "y": 740},
        },
        {
            "id": 16,
            "term": "Схемы API",
            "category": "Документация",
            "definition": "Формальные описания структуры данных, которые используются в API, включая типы данных, обязательные и необязательные поля.",
            "position": {"x": 1490, "y": 1110},
        },
        {
            "id": 17,
            "term": "DTO",
            "category": "Шаблон проектирования",
            "definition": "Объект передачи данных, используемый для передачи данных между процессами, часто в контексте сетевых взаимодействий.",
            "position": {"x": 630, "y": 1010},
        },
        # Database and Storage
        {
            "id": 18,
            "term": "Реляционная база данных",
            "category": "База данных",
            "definition": "Тип базы данных, в которой данные хранятся в таблицах и могут быть связаны между собой.",
            "position": {"x": -75, "y": 1550},
        },
        {
            "id": 19,
            "term": "SQLite",
            "category": "База данных",
            "definition": "Легковесная реляционная база данных, которая не требует отдельного серверного процесса и часто используется для небольших приложений.",
            "position": {"x": -330, "y": 1340},
        },
        {
            "id": 20,
            "term": "Кэширование",
            "category": "Оптимизация",
            "definition": "Процесс хранения данных в быстром доступе для уменьшения времени отклика и нагрузки на внешние сервисы.",
            "position": {"x": 1770, "y": -415},
        },
        # System Design and Architecture
        {
            "id": 21,
            "term": "Серверная часть",
            "category": "Архитектура",
            "definition": "Часть веб-приложения, которая обрабатывает запросы от клиентов, выполняет бизнес-логику и взаимодействует с базой данных.",
            "position": {"x": 595, "y": 415},
        },
        {
            "id": 22,
            "term": "Внешние сервисы",
            "category": "Архитектура",
            "definition": "Сторонние приложения или API, которые предоставляют функционал или данные, используемые в основном приложении.",
            "position": {"x": 970, "y": 0},
        },
        {
            "id": 23,
            "term": "Масштабируемость",
            "category": "Качество системы",
            "definition": "Способность системы увеличивать свои ресурсы и производительность при росте нагрузки или объема данных.",
            "position": {"x": 1410, "y": -410},
        },
        {
            "id": 24,
            "term": "Нагрузка",
            "category": "Метрика системы",
            "definition": "Количество запросов или операций, которые система должна обработать за определенный период времени, что позволяет оценить производительность системы.",
            "position": {"x": 1615, "y": -215},
        },
        {
            "id": 25,
            "term": "Устойчивость к отказам",
            "category": "Качество системы",
            "definition": "Способность системы продолжать функционировать корректно даже в случае возникновения ошибок или сбоев в работе отдельных компонентов.",
            "position": {"x": 1250, "y": -230},
        },
        {
            "id": 26,
            "term": "Интеграция",
            "category": "Процесс",
            "definition": "Процесс объединения различных систем или компонентов для обеспечения их совместной работы.",
            "position": {"x": 810, "y": -275},
        },
        # Configuration and Testing
        {
            "id": 27,
            "term": "Конфигурационный файл",
            "category": "Конфигурация",
            "definition": "Файл, содержащий настройки и параметры, используемые приложением для его работы.",
            "position": {"x": 345, "y": 1335},
        },
        {
            "id": 28,
            "term": "Переменные окружения",
            "category": "Конфигурация",
            "definition": "Параметры, которые могут быть установлены в операционной системе и используются приложением для настройки его поведения.",
            "position": {"x": 475, "y": 1650},
        },
        {
            "id": 29,
            "term": "Тестовое приложение",
            "category": "Тестирование",
            "definition": "Приложение, разработанное для проведения экспериментов и анализа, часто с целью проверки теорий или методов.",
            "position": {"x": -170, "y": -65},
        },
        {
            "id": 30,
            "term": "Тестовые записи",
            "category": "Тестирование",
            "definition": "Фиктивные данные, используемые для проверки функциональности приложения и его взаимодействия с базой данных.",
            "position": {"x": -415, "y": -345},
        },
    ],
    "edges": [
        # Connections to main node
        {"source": 0, "target": 1, "description": "Основной язык разработки"},
        {"source": 0, "target": 7, "description": "Инструменты разработки"},
        {"source": 0, "target": 12, "description": "Интерфейсы взаимодействия"},
        {"source": 0, "target": 18, "description": "Хранение данных"},
        {"source": 0, "target": 21, "description": "Архитектура приложения"},
        {"source": 0, "target": 27, "description": "Конфигурация системы"},
        # Python and its features
        {"source": 1, "target": 2, "description": "Поддерживает динамическую типизацию"},
        {"source": 1, "target": 5, "description": "Включает функционал датаклассов"},
        {"source": 1, "target": 6, "description": "Следует стандартам PEP 8"},
        {"source": 1, "target": 4, "description": "Поддерживает объектно-ориентированное программирование"},
        # Framework relationships
        {"source": 8, "target": 1, "description": "Разработан на Python"},
        {"source": 8, "target": 7, "description": "Является веб-фреймворком"},
        {"source": 8, "target": 13, "description": "Поддерживает REST API"},
        # API relationships
        {"source": 13, "target": 12, "description": "Реализует REST принципы"},
        {"source": 14, "target": 12, "description": "Предоставляется внешними сервисами"},
        {"source": 15, "target": 14, "description": "Пример внешнего API"},
        {"source": 16, "target": 12, "description": "Описывает структуру API"},
        {"source": 17, "target": 12, "description": "Используется для передачи данных"},
        # Database relationships
        {"source": 19, "target": 18, "description": "Реализация реляционной БД"},
        {"source": 20, "target": 24, "description": "Оптимизирует нагрузку"},
        # System design relationships
        {"source": 23, "target": 24, "description": "Управляет ростом нагрузки"},
        {"source": 25, "target": 22, "description": "Обеспечивает надежность при сбоях"},
        {"source": 26, "target": 22, "description": "Объединяет внешние сервисы"},
        {"source": 21, "target": 13, "description": "Реализует REST API"},
        # Testing and configuration
        {"source": 30, "target": 29, "description": "Данные для тестирования"},
        {"source": 27, "target": 28, "description": "Включает переменные окружения"},
        # Static analysis
        {"source": 11, "target": 10, "description": "Инструменты анализа кода"},
        {"source": 6, "target": 10, "description": "Проверяется статическим анализом"},
        # Additional connections
        {"source": 9, "target": 26, "description": "Обеспечивает интеграцию через командную строку"},
        {"source": 3, "target": 10, "description": "Упрощает статический анализ"},
        {"source": 23, "target": 25, "description": "Поддерживает отказоустойчивость"},
    ],
}
